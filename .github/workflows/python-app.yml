name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.13"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run pre-commit hooks
      run: |
        pip install pre-commit
        pre-commit run --all-files
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Set up database
      env:
        ENVIRONMENT: dev
        LOG_LEVEL: DEBUG
        HOST: 0.0.0.0
        PORT: 8000
        DEBUG: "True"
        ALLOWED_HOSTS: localhost,127.0.0.1
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"
        SECRET_KEY: your_secret_key
        ALGORITHM: HS256
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        REDIS_URL: redis://localhost:6379/0
        REDIS_CACHE_TTL: 3600
        USE_MOCK_REDIS: "True"
        SAGEMAKER_ENDPOINT: recommendation-endpoint
        USE_SAGEMAKER: "False"
      run: |
        # Run migrations or any setup needed
        echo "Setting up the database..."
        # Example: run migration commands here if applicable
        # e.g., alembic upgrade head or similar command

    - name: Test with pytest and coverage
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db"
      run: |
        pytest --cov=app --cov-report=term
